{
	// Place your benzed-ts workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "new-schema-file",
		"body": [
			"import IsType from './is-type'",
			"",
			"//// Types ////",
			"",
			"export type IsInstanceInput = (new (...args: any) => object) | (abstract new (...args: any) => object)",
			"",
			"//// Exports ////",
			"",
			"class IsInstance<C extends IsInstanceInput> extends IsType<InstanceType<C>> {",
			"",
			"constructor(readonly Type: C) {",
			"",
			"super({",
			"        type: Type.name,",
			"        is: (i): i is InstanceType<C> => i instanceof Type",
			"    })",
			"}",
			"",
			"}",
			"",
			"//// Exports ////",
			"",
			"export default IsInstance",
			"",
			"export {",
			"    IsInstance",
			"}"
		],
		"description": "Log output to console"
	}
}